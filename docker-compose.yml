version: "3.8"

services:
    nextjs:
        # 운영 환경용 서비스
        image: ${{ secrets.DOCKERHUB_USERNAME }}/lafarfalla:latest
        container_name: nextjs
        restart: always
        working_dir: /app
        # NGINX가 포트를 관리하므로 포트 설정은 주석 처리
        # ports:
        #     - "3000:3000"
        environment:
            - NODE_ENV=production
            - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
            - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
            - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
            - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
            - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
            - NEXTAUTH_URL=${NEXTAUTH_URL}
            - R2_TOKEN=${R2_TOKEN}
            - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
            - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
            - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
            - R2_BUCKET_NAME=${R2_BUCKET_NAME}
            - R2_FILE_DOMAIN=${R2_FILE_DOMAIN}
            - MONGODB_URI=${MONGODB_URI}
            - NEXT_IMAGE_OPTIMIZATION_TIMEOUT=${NEXT_IMAGE_OPTIMIZATION_TIMEOUT}
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
            - SMTP_SECURE=${SMTP_SECURE}
            - SMTP_USER=${SMTP_USER}
            - SMTP_PASSWORD=${SMTP_PASSWORD}
            - ADMIN_EMAIL=${ADMIN_EMAIL}
            - STORE_NAME=${STORE_NAME}
            - PORTONE_API_SECRET_KEY=${PORTONE_API_SECRET_KEY}

    dev-nextjs:
        # 개발 환경용 서비스 추가
        image: ${{ secrets.DOCKERHUB_USERNAME }}/lafarfalla:dev
        container_name: dev-nextjs
        restart: always
        working_dir: /app
        # NGINX가 포트를 관리하므로 포트 설정은 주석 처리
        # ports:
        #     - "3000:3000"
        environment:
            - NODE_ENV=development
            - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
            - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
            - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
            - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
            - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
            # NEXTAUTH_URL 값은 ci-dev.yml에서 설정하므로 여기서는 템플릿 변수 사용
            - NEXTAUTH_URL=${NEXTAUTH_URL}
            - R2_TOKEN=${R2_TOKEN}
            - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
            - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
            - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
            - R2_BUCKET_NAME=${R2_BUCKET_NAME}
            - R2_FILE_DOMAIN=${R2_FILE_DOMAIN}
            - MONGODB_URI=${MONGODB_URI}
            - NEXT_IMAGE_OPTIMIZATION_TIMEOUT=${NEXT_IMAGE_OPTIMIZATION_TIMEOUT}
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
            - SMTP_SECURE=${SMTP_SECURE}
            - SMTP_USER=${SMTP_USER}
            - SMTP_PASSWORD=${SMTP_PASSWORD}
            - ADMIN_EMAIL=${ADMIN_EMAIL}
            - STORE_NAME=${STORE_NAME}
            - PORTONE_API_SECRET_KEY=${PORTONE_API_SECRET_KEY}

    nginx:
        image: nginx:latest
        container_name: nginx
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt:ro
            - ./certbot/www:/var/www/certbot
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - nextjs
            - dev-nextjs # 개발 서비스도 Nginx가 의존하도록 추가
        environment:
            - NGINX_HOST=twcommunity-server.store
            - NGINX_EMAIL=wnsdn300300@gmail.com

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - ./certbot/www:/var/www/certbot
            - ./certbot/conf:/etc/letsencrypt
        entrypoint: >
            /bin/sh -c "trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew --webroot -w /var/www/certbot; done"