import { OrderData } from "@/src/entities/type/interfaces";
import { X } from "lucide-react";
import { useState } from "react";

// üÜï 4Í∞ÄÏßÄ Ï£ºÎ¨∏ Ï∑®ÏÜå ÏïåÍ≥†Î¶¨Ï¶ò Ï†ÅÏö©Îêú ÌôòÎ∂à/Ï∑®ÏÜå ÏöîÏ≤≠ Î™®Îã¨
const RefundCancelModal = ({
    isOpen,
    onClose,
    onSubmit,
    order,
}: {
    isOpen: boolean;
    onClose: () => void;
    onSubmit: (data: {
        type: string;
        reason: string;
        orderInfo: string;
    }) => void;
    order: OrderData;
}) => {
    // üÜï Ï£ºÎ¨∏ ÏÉÅÌÉúÏóê Îî∞Î•∏ Í∏∞Î≥∏ ÌÉÄÏûÖ ÏÑ§Ï†ï
    const getDefaultRequestType = () => {
        switch (order.shippingStatus) {
            case "pending":
            case "ready":
                return "cancel"; // Ï£ºÎ¨∏ Ï∑®ÏÜå
            case "shipped":
                return "refund"; // ÌôòÎ∂à
            case "confirm":
                return "exchange"; // ÍµêÌôò
            default:
                return "cancel";
        }
    };

    // üÜï Ï£ºÎ¨∏ ÏÉÅÌÉúÏóê Îî∞Î•∏ Í∞ÄÎä•Ìïú ÏòµÏÖòÎì§
    const getAvailableOptions = () => {
        switch (order.shippingStatus) {
            case "pending":
            case "ready":
                return [
                    {
                        value: "cancel",
                        label: "Ï£ºÎ¨∏ Ï∑®ÏÜå",
                        description: "Ï£ºÎ¨∏ÏùÑ ÏôÑÏ†ÑÌûà Ï∑®ÏÜåÌï©ÎãàÎã§",
                    },
                ];
            case "shipped":
                return [
                    {
                        value: "refund",
                        label: "ÌôòÎ∂à ÏöîÏ≤≠",
                        description: "ÏÉÅÌíà Î∞òÏÜ° ÌõÑ ÌôòÎ∂àÎ∞õÏäµÎãàÎã§",
                    },
                    {
                        value: "exchange",
                        label: "ÍµêÌôò ÏöîÏ≤≠",
                        description: "Îã§Î•∏ ÏÉÅÌíàÏúºÎ°ú ÍµêÌôòÌï©ÎãàÎã§",
                    },
                ];
            case "confirm":
                return [
                    {
                        value: "exchange",
                        label: "ÍµêÌôò ÏöîÏ≤≠",
                        description: "ÎèôÏùº Í∞ÄÍ≤©ÎåÄ ÏÉÅÌíàÏúºÎ°úÎßå ÍµêÌôò Í∞ÄÎä•Ìï©ÎãàÎã§",
                    },
                ];
            default:
                return [
                    {
                        value: "cancel",
                        label: "Ï£ºÎ¨∏ Ï∑®ÏÜå",
                        description: "Ï£ºÎ¨∏ÏùÑ Ï∑®ÏÜåÌï©ÎãàÎã§",
                    },
                ];
        }
    };

    const [requestType, setRequestType] = useState(getDefaultRequestType());
    const [reason, setReason] = useState("");
    const [isSubmitting, setIsSubmitting] = useState(false);
    const availableOptions = getAvailableOptions();

    // üÜï ÏÉÅÌÉúÎ≥Ñ Ï†úÎ™© ÏÑ§Ï†ï
    const getModalTitle = () => {
        switch (order.shippingStatus) {
            case "pending":
            case "ready":
                return "Ï£ºÎ¨∏ Ï∑®ÏÜå";
            case "shipped":
                return "ÌôòÎ∂à Î∞è ÍµêÌôò";
            case "confirm":
                return "ÍµêÌôò ÏöîÏ≤≠";
            default:
                return "Ï£ºÎ¨∏ Ï≤òÎ¶¨";
        }
    };

    // üÜï ÏöîÏ≤≠ ÌÉÄÏûÖÎ≥Ñ ÏïàÎÇ¥ Î©îÏãúÏßÄ
    const getTypeDescription = (type: string) => {
        switch (type) {
            case "cancel":
                return {
                    title: "Ï£ºÎ¨∏ Ï∑®ÏÜå",
                    description:
                        "ÏïÑÏßÅ ÏÉÅÌíà Ï§ÄÎπÑ Ï†ÑÏù¥ÎØÄÎ°ú Ï¶âÏãú Ï∑®ÏÜå Í∞ÄÎä•Ìï©ÎãàÎã§.",
                    processingTime: "Ï¶âÏãú Ï≤òÎ¶¨",
                };
            case "refund":
                return {
                    title: "ÌôòÎ∂à ÏöîÏ≤≠",
                    description: "ÏÉÅÌíàÏùÑ Î∞òÏÜ°ÌïòÏã† ÌõÑ ÌôòÎ∂à Ï≤òÎ¶¨Îê©ÎãàÎã§.",
                    processingTime: "Î∞òÏÜ° ÌôïÏù∏ ÌõÑ 3-5Ïùº",
                };
            case "exchange":
                return {
                    title: "ÍµêÌôò ÏöîÏ≤≠",
                    description:
                        order.shippingStatus === "confirm"
                            ? "Íµ¨Îß§ÌôïÏ†ï ÌõÑÏóêÎäî ÎèôÏùº Í∞ÄÍ≤©ÎåÄ ÏÉÅÌíàÏúºÎ°úÎßå ÍµêÌôò Í∞ÄÎä•Ìï©ÎãàÎã§."
                            : "Îã§Î•∏ ÏÉÅÌíàÏúºÎ°ú ÍµêÌôòÌïòÍ±∞ÎÇò ÏÇ¨Ïù¥Ï¶à/ÏÉâÏÉÅÏùÑ Î≥ÄÍ≤ΩÌï©ÎãàÎã§.",
                    processingTime:
                        order.shippingStatus === "confirm"
                            ? "ÏÉÅÌíà Ï†ëÏàò ÌõÑ 10-14Ïùº"
                            : "ÏÉÅÌíà Ï†ëÏàò ÌõÑ 7-10Ïùº",
                };
            default:
                return {
                    title: "ÏöîÏ≤≠ Ï≤òÎ¶¨",
                    description: "ÏöîÏ≤≠ÏÇ¨Ìï≠ÏùÑ Ï†ëÏàòÌïòÏó¨ Ï≤òÎ¶¨Ìï©ÎãàÎã§.",
                    processingTime: "2-3Ïùº",
                };
        }
    };

    // üÜï ÏöîÏ≤≠ ÌÉÄÏûÖÎ≥Ñ ÏÇ¨Ïú† Í∞ÄÏù¥Îìú
    const getReasonPlaceholder = (type: string) => {
        switch (type) {
            case "cancel":
                return "Ï£ºÎ¨∏ Ï∑®ÏÜå ÏÇ¨Ïú†Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.\nÏòà: Ïã§ÏàòÎ°ú Ï£ºÎ¨∏, Îã§Î•∏ ÏÉÅÌíà Ï£ºÎ¨∏ ÏòàÏ†ï Îì±";
            case "refund":
                return "ÌôòÎ∂à ÏÇ¨Ïú†Î•º ÏÉÅÏÑ∏Ìûà ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.\nÏòà: ÏÉÅÌíàÏù¥ ÏÑ§Î™ÖÍ≥º Îã§Î¶Ñ, ÏÇ¨Ïù¥Ï¶àÍ∞Ä ÎßûÏßÄ ÏïäÏùå Îì±";
            case "exchange":
                return order.shippingStatus === "confirm"
                    ? "ÍµêÌôò ÏÇ¨Ïú† Î∞è ÏõêÌïòÎäî ÏÉÅÌíà Ï†ïÎ≥¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.\n‚Äª Íµ¨Îß§ÌôïÏ†ï ÌõÑÏóêÎäî ÎèôÏùº Í∞ÄÍ≤©ÎåÄ ÏÉÅÌíàÏúºÎ°úÎßå ÍµêÌôò Í∞ÄÎä•\nÏòà: ÏÇ¨Ïù¥Ï¶à Î≥ÄÍ≤Ω (L ‚Üí XL), ÏÉâÏÉÅ Î≥ÄÍ≤Ω (Î∏îÎûô ‚Üí ÌôîÏù¥Ìä∏), Í∞ôÏùÄ Í∞ÄÍ≤©Ïùò Îã§Î•∏ ÏÉÅÌíà Îì±"
                    : "ÍµêÌôò ÏÇ¨Ïú† Î∞è ÏõêÌïòÎäî ÏÉÅÌíà Ï†ïÎ≥¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.\nÏòà: ÏÇ¨Ïù¥Ï¶à Î≥ÄÍ≤Ω (L ‚Üí XL), ÏÉâÏÉÅ Î≥ÄÍ≤Ω (Î∏îÎûô ‚Üí ÌôîÏù¥Ìä∏) Îì±";
            default:
                return "ÏÇ¨Ïú†Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.";
        }
    };

    const handleSubmit = async () => {
        if (!reason.trim()) {
            alert("ÏÇ¨Ïú†Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
            return;
        }

        const orderInfo = `
Ï£ºÎ¨∏Î≤àÌò∏: ${order._id}
Ï£ºÎ¨∏ÏûêÎ™Ö: ${order.userNm}
Ï£ºÎ¨∏ÏÉÅÌíà: ${order.items.map((item) => `${item.productNm} (${item.size}/${item.color})`).join(", ")}
Ï£ºÎ¨∏Í∏àÏï°: ${formatPrice(order.totalPrice)}
Ï£ºÎ¨∏ÏùºÏãú: ${formatDate(order.createdAt)}
Î∞∞ÏÜ°ÏÉÅÌÉú: ${getShippingStatusText(order.shippingStatus)}
        `.trim();

        const typeInfo = getTypeDescription(requestType);

        if (
            confirm(
                `Ï†ïÎßêÎ°ú ${typeInfo.title}Î•º ÏöîÏ≤≠ÌïòÏãúÍ≤†ÏäµÎãàÍπå?\n\nÏ≤òÎ¶¨ÏãúÍ∞Ñ: ${typeInfo.processingTime}\n${typeInfo.description}`,
            )
        ) {
            setIsSubmitting(true);
            try {
                await onSubmit({
                    type: requestType,
                    reason: reason.trim(),
                    orderInfo,
                });
                onClose();
            } finally {
                setIsSubmitting(false);
            }
        }
    };

    // üÜï Î∞∞ÏÜ° ÏÉÅÌÉú ÌÖçÏä§Ìä∏ Î≥ÄÌôò
    const getShippingStatusText = (status: string) => {
        switch (status) {
            case "pending":
                return "Ï£ºÎ¨∏ÏôÑÎ£å";
            case "ready":
                return "ÏÉÅÌíàÏ§ÄÎπÑÏ§ë";
            case "shipped":
                return "Ï∂úÍ≥†ÏôÑÎ£å";
            case "confirm":
                return "Íµ¨Îß§ÌôïÏ†ï";
            case "cancel":
                return "Ï∑®ÏÜåÎê®";
            default:
                return status;
        }
    };

    const formatPrice = (price: number) => {
        return new Intl.NumberFormat("ko-KR").format(price) + " KRW";
    };

    const formatDate = (dateString?: string) => {
        if (!dateString) return "-";
        return new Date(dateString).toLocaleDateString("ko-KR", {
            year: "numeric",
            month: "long",
            day: "numeric",
            hour: "2-digit",
            minute: "2-digit",
        });
    };

    if (!isOpen) return null;

    const currentTypeInfo = getTypeDescription(requestType);

    return (
        <div
            className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 p-4"
            onClick={onClose}
            style={{ touchAction: "manipulation" }}
        >
            <div
                className="w-full max-w-md rounded-lg bg-white"
                onClick={(e) => e.stopPropagation()}
            >
                {/* Ìó§Îçî */}
                <div className="flex items-center justify-between border-b border-gray-200 px-4 py-3">
                    <h3 className="font-pretendard text-lg font-bold text-gray-900">
                        {getModalTitle()}
                    </h3>
                    <button
                        onClick={onClose}
                        className="flex h-8 w-8 flex-shrink-0 items-center justify-center rounded-full transition-colors hover:bg-gray-100 active:bg-gray-200"
                    >
                        <X className="h-5 w-5 text-gray-600" />
                    </button>
                </div>

                <div className="space-y-4 p-4">
                    <div>
                        <label className="block font-pretendard text-sm font-medium text-gray-700">
                            ÏöîÏ≤≠ Ïú†Ìòï
                        </label>
                        <div>
                            {availableOptions.map((option) => (
                                <label
                                    key={option.value}
                                    className="flex items-center"
                                >
                                    <input
                                        type="radio"
                                        name="requestType"
                                        value={option.value}
                                        checked={requestType === option.value}
                                        onChange={(e) =>
                                            setRequestType(
                                                e.target.value as any,
                                            )
                                        }
                                        className="mr-3 mt-2"
                                    />
                                    <div>
                                        <span className="font-pretendard text-sm font-medium text-gray-900">
                                            {option.label}
                                        </span>
                                        <p className="font-pretendard text-xs text-gray-600">
                                            {option.description}
                                        </p>
                                    </div>
                                </label>
                            ))}
                        </div>
                    </div>

                    {/* üÜï ÏÑ†ÌÉùÎêú ÌÉÄÏûÖ Ï†ïÎ≥¥ ÌëúÏãú */}
                    <div className="rounded-md border border-blue-200 bg-blue-50 p-3">
                        <div className="text-sm text-blue-800">
                            <p className="mb-1 font-pretendard font-medium">
                                {currentTypeInfo.title} ÏïàÎÇ¥
                            </p>
                            <p className="mb-2 font-pretendard text-xs">
                                {currentTypeInfo.description}
                            </p>
                            <p className="font-pretendard text-xs font-medium">
                                ÏòàÏÉÅ Ï≤òÎ¶¨ÏãúÍ∞Ñ: {currentTypeInfo.processingTime}
                            </p>
                        </div>
                    </div>

                    {/* üÜï Í∞úÏÑ†Îêú ÏÇ¨Ïú† ÏûÖÎ†• */}
                    <div>
                        <label className="mb-2 block font-pretendard text-sm font-medium text-gray-700">
                            {currentTypeInfo.title} ÏÇ¨Ïú†{" "}
                            <span className="text-red-500">*</span>
                        </label>
                        <textarea
                            value={reason}
                            onChange={(e) => setReason(e.target.value)}
                            className="w-full resize-none border border-gray-300 bg-white p-3 text-sm focus:border-black focus:outline-none"
                            rows={5}
                            placeholder={getReasonPlaceholder(requestType)}
                            maxLength={500}
                        />
                        <div className="mt-1 flex justify-between">
                            <p className="font-pretendard text-xs text-gray-500">
                                ÏÉÅÏÑ∏Ìïú ÏÇ¨Ïú†Î•º ÏûëÏÑ±ÌïòÏãúÎ©¥ Îçî Îπ†Î•∏ Ï≤òÎ¶¨Í∞Ä
                                Í∞ÄÎä•Ìï©ÎãàÎã§.
                            </p>
                            <span className="font-pretendard text-xs text-gray-400">
                                {reason.length}/500
                            </span>
                        </div>
                    </div>

                    {/* üÜï Ï∂îÍ∞Ä ÏïàÎÇ¥ÏÇ¨Ìï≠ (ÏöîÏ≤≠ ÌÉÄÏûÖÎ≥Ñ) */}
                    <div className="rounded-md border border-yellow-200 bg-yellow-50 p-3">
                        <div className="text-sm text-yellow-800">
                            <p className="mb-1 font-pretendard font-medium">
                                Ï∂îÍ∞Ä ÏïàÎÇ¥ÏÇ¨Ìï≠
                            </p>
                            <ul className="space-y-1 font-pretendard text-xs">
                                {requestType === "cancel" && (
                                    <>
                                        <li>‚Ä¢ Í≤∞Ï†ú Ï∑®ÏÜåÎäî Ï¶âÏãú Ï≤òÎ¶¨Îê©ÎãàÎã§</li>
                                        <li>
                                            ‚Ä¢ Ïπ¥Îìú ÏäπÏù∏Ï∑®ÏÜåÎäî 2-3Ïùº ÏÜåÏöîÎê† Ïàò
                                            ÏûàÏäµÎãàÎã§
                                        </li>
                                    </>
                                )}
                                {requestType === "refund" && (
                                    <>
                                        <li>
                                            ‚Ä¢ ÏÉÅÌíàÏùÑ Î∞õÏúºÏã† ÌõÑ 7Ïùº Ïù¥ÎÇ¥ Î∞òÏÜ°
                                            Í∞ÄÎä•
                                        </li>
                                        <li>
                                            ‚Ä¢ Î∞òÏÜ°ÎπÑÎäî ÏÇ¨Ïú†Ïóê Îî∞Îùº Ï∞®Îì±
                                            Ï†ÅÏö©Îê©ÎãàÎã§
                                        </li>
                                        <li>
                                            ‚Ä¢ ÌôòÎ∂àÏùÄ ÏõêÎûò Í≤∞Ï†úÏàòÎã®ÏúºÎ°ú
                                            Ï≤òÎ¶¨Îê©ÎãàÎã§
                                        </li>
                                    </>
                                )}
                                {requestType === "exchange" && (
                                    <>
                                        {order.shippingStatus === "confirm" ? (
                                            <>
                                                <li>
                                                    ‚Ä¢{" "}
                                                    <strong>
                                                        Íµ¨Îß§ÌôïÏ†ï ÌõÑ ÍµêÌôòÏùÄ ÎèôÏùº
                                                        Í∞ÄÍ≤©ÎåÄ ÏÉÅÌíàÏúºÎ°úÎßå Í∞ÄÎä•
                                                    </strong>
                                                </li>
                                                <li>
                                                    ‚Ä¢ ÌôòÎ∂àÏùÄ Ï†àÎåÄ Î∂àÍ∞ÄÎä•ÌïòÎ©∞
                                                    ÍµêÌôòÎßå Í∞ÄÎä•Ìï©ÎãàÎã§
                                                </li>
                                                <li>
                                                    ‚Ä¢ ÍµêÌôò Ïãú Ï∂îÍ∞Ä Í∏àÏï° Î∞úÏÉù Ïãú
                                                    Ï∂îÍ∞Ä Í≤∞Ï†ú ÌïÑÏöî
                                                </li>
                                                <li>
                                                    ‚Ä¢ ÍµêÌôò Í∞ÄÎä• Í∏∞Í∞Ñ: Íµ¨Îß§ÌôïÏ†ï
                                                    ÌõÑ 7Ïùº Ïù¥ÎÇ¥
                                                </li>
                                            </>
                                        ) : (
                                            <>
                                                <li>
                                                    ‚Ä¢ ÍµêÌôò ÏÉÅÌíàÏùò Ïû¨Í≥† Ïó¨Î∂ÄÎ•º
                                                    Î®ºÏ†Ä ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî
                                                </li>
                                                <li>
                                                    ‚Ä¢ ÍµêÌôò Ïãú Ï∂îÍ∞Ä Í∏àÏï°Ïù¥ Î∞úÏÉùÌï†
                                                    Ïàò ÏûàÏäµÎãàÎã§
                                                </li>
                                                <li>
                                                    ‚Ä¢ 1ÌöåÏóê ÌïúÌï¥ Î¨¥Î£å ÍµêÌôò
                                                    ÏÑúÎπÑÏä§ Ï†úÍ≥µ
                                                </li>
                                            </>
                                        )}
                                    </>
                                )}
                                <li>
                                    ‚Ä¢ Ïπ¥Ïπ¥Ïò§ÌÜ° Ï±ÑÎÑêÎ°ú ÏßÑÌñâÏÉÅÌô©ÏùÑ Ïã§ÏãúÍ∞Ñ
                                    ÏïàÎÇ¥ÎìúÎ¶ΩÎãàÎã§
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>

                {/* Ìë∏ÌÑ∞ */}
                <div className="flex space-x-3 border-t border-gray-200 px-4 py-3">
                    <button
                        onClick={onClose}
                        className="flex-1 bg-gray-100 px-6 py-2.5 font-pretendard text-sm font-medium text-gray-700 transition-colors duration-200 hover:bg-gray-200"
                    >
                        Ï∑®ÏÜå
                    </button>
                    <button
                        onClick={handleSubmit}
                        disabled={!reason.trim() || isSubmitting}
                        className="flex-1 bg-black px-6 py-2.5 font-pretendard text-sm font-medium text-white transition-colors duration-200 hover:bg-gray-800 disabled:cursor-not-allowed disabled:bg-gray-400"
                    >
                        {isSubmitting
                            ? "Ï≤òÎ¶¨ Ï§ë..."
                            : `${currentTypeInfo.title} ÏöîÏ≤≠`}
                    </button>
                </div>
            </div>
        </div>
    );
};

export default RefundCancelModal;
