import { EmailResult, OrderData, ShippingStatus } from "@/src/components/order/interface";
import nodemailer, { Transporter } from "nodemailer";

export class EmailService {
  private transporter: Transporter;

  constructor() {
    this.transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST || "smtp.gmail.com",
      port: parseInt(process.env.SMTP_PORT || "587"),
      secure: process.env.SMTP_SECURE === "true",
      auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASSWORD,
      },
    });
  }

  public async sendOrderNotification(orderData: OrderData): Promise<EmailResult> {
    try {
      const mailOptions = {
          from: `"${process.env.STORE_NAME || "Ïò®ÎùºÏù∏ Ïä§ÌÜ†Ïñ¥"}" <${process.env.SMTP_USER}>`,
          to: process.env.ADMIN_EMAIL,
          subject: `üö® ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏ Ï†ëÏàò - ${orderData._id}`,
          html: this.generateOrderEmailHTML(orderData),
      };

      const info = await this.transporter.sendMail(mailOptions);

      return {
          success: true,
          messageId: info.messageId,
      };
    } catch (error) {
      const errorMessage =
          error instanceof Error ? error.message : "Unknown error";
      console.error("Ïù¥Î©îÏùº Î∞úÏÜ° Ïã§Ìå®:", errorMessage);

      return {
          success: false,
          error: errorMessage,
      };
    }
  }

  private generateOrderEmailHTML(orderData: OrderData): string {
    const fullAddress = `${orderData.address} ${orderData.detailAddress} (${orderData.postcode})`;

    // ÏïàÏ†ÑÌïú ÎÇ†Ïßú Ï≤òÎ¶¨
    const orderDateTime = orderData.createdAt
        ? new Date(orderData.createdAt).toLocaleString("ko-KR")
        : new Date().toLocaleString("ko-KR");

    // Í≤∞Ï†úÎ∞©Î≤ï ÌïúÍ∏Ä Î≥ÄÌôò
    const payMethodMap: Record<OrderData["payMethod"], string> = {
        NAVER_PAY: "ÎÑ§Ïù¥Î≤ÑÌéòÏù¥",
        KAKAO_PAY: "Ïπ¥Ïπ¥Ïò§ÌéòÏù¥",
        CARD: "Ïã†Ïö©Ïπ¥Îìú",
    };
    const payMethodText = payMethodMap[orderData.payMethod];

    // Î∞∞ÏÜ°ÏÉÅÌÉú ÌïúÍ∏Ä Î≥ÄÌôò
    const shippingStatusMap: Record<ShippingStatus, string> = {
        pending: "Ï£ºÎ¨∏ ÏôÑÎ£å",
        ready: "ÏÉÅÌíà Ï§ÄÎπÑ Ï§ë",
        shipped: "Ï∂úÍ≥†",
        confirm: "Íµ¨Îß§ ÌôïÏ†ï",
        cancel: "Ï£ºÎ¨∏ Ï∑®ÏÜå (ÍµêÌôò/ÌôòÎ∂à)",
    };
    const shippingStatusText = shippingStatusMap[orderData.shippingStatus];

    // ÏÉÅÌíà Î™©Î°ù HTML ÏÉùÏÑ± (priceÍ∞Ä ÏóÜÎäî Í≤ΩÏö∞ Ï≤òÎ¶¨)
    const itemsHtml = orderData.items
        .map(
            (item: any) => `
                          <tr style="border-bottom: 1px solid #e5e7eb;">
                            <td style="padding: 12px 16px; color: #374151;">
                              <div style="font-weight: 600; margin-bottom: 4px;">${item.name}</div>
                              ${item.sku ? `<div style="font-size: 12px; color: #6b7280;">SKU: ${item.sku}</div>` : ""}
                              ${item.description ? `<div style="font-size: 13px; color: #6b7280; margin-top: 2px;">${item.description}</div>` : ""}
                            </td>
                            <td style="padding: 12px 16px; text-align: center; color: #374151; font-weight: 500;">
                              ${item.quantity}Í∞ú
                            </td>
                            <td style="padding: 12px 16px; text-align: right; color: #374151;">
                              ${item.price ? item.price.toLocaleString() + "Ïõê" : "-"}
                            </td>
                            <td style="padding: 12px 16px; text-align: right; font-weight: 600; color: #dc2626;">
                              ${item.price ? (item.quantity * item.price).toLocaleString() + "Ïõê" : "-"}
                            </td>
                          </tr>
                        `,
        )
        .join("");

    return `
          <!DOCTYPE html>
            <html lang="ko">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏ ÏïåÎ¶º</title>
              <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body {
                  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans KR', sans-serif;
                  background-color: #f9fafb;
                  color: #111827;
                  line-height: 1.6;
                }
                .container {
                  max-width: 600px;
                  margin: 32px auto;
                  background: #fff;
                  border: 1px solid #e5e7eb;
                  border-radius: 4px;
                }
                .header {
                  background-color: #1f2937;
                  color: #fff;
                  padding: 24px 20px;
                  text-align: center;
                }
                .urgent-badge {
                  display: inline-block;
                  background-color: #facc15;
                  color: #78350f;
                  padding: 4px 12px;
                  font-size: 12px;
                  font-weight: 600;
                  text-transform: uppercase;
                  margin-bottom: 12px;
                }
                .header h1 {
                  font-size: 20px;
                  font-weight: 700;
                  margin-bottom: 6px;
                }
                .header p {
                  font-size: 14px;
                }
                .content {
                  padding: 24px 20px;
                }
                .section {
                  border: 1px solid #e5e7eb;
                  padding: 16px;
                  margin-bottom: 24px;
                  border-radius: 4px;
                }
                .section-title {
                  font-size: 16px;
                  font-weight: 700;
                  margin-bottom: 16px;
                  color: #111827;
                }
                .info-grid {
                  display: grid;
                  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                  gap: 12px;
                }
                .info-item {
                  display: flex;
                  align-items: flex-start;
                  gap: 8px;
                }
                .info-label {
                  font-weight: 600;
                  color: #6b7280;
                  font-size: 13px;
                  min-width: 80px;
                }
                .info-value {
                  font-size: 14px;
                  font-weight: 500;
                  color: #111827;
                }
                .highlight {
                  font-weight: 700;
                  color: #dc2626;
                }
                .order-table {
                  width: 100%;
                  border-collapse: collapse;
                  margin-top: 12px;
                }
                .order-table th, .order-table td {
                  padding: 12px;
                  border: 1px solid #e5e7eb;
                  font-size: 13px;
                }
                .order-table th {
                  background-color: #f3f4f6;
                  font-weight: 600;
                  text-align: left;
                }
                .order-table td:nth-child(2),
                .order-table th:nth-child(2) {
                  text-align: center;
                }
                .order-table td:nth-child(3),
                .order-table td:nth-child(4),
                .order-table th:nth-child(3),
                .order-table th:nth-child(4) {
                  text-align: right;
                }
                .total-section {
                  text-align: right;
                  padding: 16px;
                  background-color: #fefce8;
                  border: 1px solid #fde68a;
                  border-radius: 4px;
                }
                .total-label {
                  font-size: 14px;
                  font-weight: 600;
                  color: #78350f;
                  margin-bottom: 4px;
                }
                .total-amount {
                  font-size: 20px;
                  font-weight: 700;
                  color: #dc2626;
                }
                .action-section {
                  padding: 20px;
                  text-align: center;
                  border: 1px solid #e5e7eb;
                  background-color: #f9fafb;
                  border-radius: 4px;
                }
                .action-section p {
                  font-size: 14px;
                  color: #374151;
                  margin: 12px 0;
                }
                .action-button {
                  display: inline-block;
                  background-color: #1f2937;
                  color: #fff;
                  padding: 10px 20px;
                  font-weight: 600;
                  font-size: 14px;
                  text-decoration: none;
                  border-radius: 4px;
                }
                .footer {
                  background-color: #f3f4f6;
                  color: #6b7280;
                  font-size: 12px;
                  text-align: center;
                  padding: 16px;
                  border-top: 1px solid #e5e7eb;
                }
                .status-badge {
                  display: inline-block;
                  padding: 2px 8px;
                  border-radius: 4px;
                  font-size: 12px;
                  font-weight: 600;
                }
                .status-pending { background-color: #fef3c7; color: #92400e; }
                .status-confirm { background-color: #d1fae5; color: #065f46; }
                .status-ready { background-color: #dbeafe; color: #1e40af; }
                .status-shipped { background-color: #e0e7ff; color: #3730a3; }
                .status-delivered { background-color: #dcfce7; color: #166534; }
                .status-cancel { background-color: #fee2e2; color: #991b1b; }
                @media (max-width: 600px) {
                  .container { margin: 10px; }
                  .info-grid { grid-template-columns: 1fr; }
                  .total-amount { font-size: 18px; }
                }
              </style>
            </head>
            <body>
              <div class="container">
                <div class="header">
                  <div class="header-content">
                    <span class="urgent-badge">Í∏¥Í∏â Ï≤òÎ¶¨ ÌïÑÏöî</span>
                    <h1>üö® ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏ Ï†ëÏàò</h1>
                    <p>Ï¶âÏãú ÌôïÏù∏Ïù¥ ÌïÑÏöîÌïú Ï£ºÎ¨∏Ïù¥ Îì§Ïñ¥ÏôîÏäµÎãàÎã§</p>
                  </div>
                </div>

                <div class="content">
                  <!-- Ï£ºÎ¨∏ Í∏∞Î≥∏ Ï†ïÎ≥¥ -->
                  <div class="section">
                    <div class="section-title">üìã Ï£ºÎ¨∏ Ï†ïÎ≥¥</div>
                    <div class="info-grid">
                      <div class="info-item">
                        <span class="info-label">Ï£ºÎ¨∏ ID:</span>
                        <span class="info-value highlight">${orderData._id || "N/A"}</span>
                      </div>
                      <div class="info-item">
                        <span class="info-label">Ï£ºÎ¨∏ÏùºÏãú:</span>
                        <span class="info-value">${orderDateTime}</span>
                      </div>
                      <div class="info-item">
                        <span class="info-label">Í≤∞Ï†úÎ∞©Î≤ï:</span>
                        <span class="info-value">${payMethodText}</span>
                      </div>
                      <div class="info-item">
                        <span class="info-label">Î∞∞ÏÜ°ÏÉÅÌÉú:</span>
                        <span class="info-value">
                          <span class="status-badge status-${orderData.shippingStatus}">${shippingStatusText}</span>
                        </span>
                      </div>
                      ${
                          orderData.paymentId
                              ? `
                      <div class="info-item">
                        <span class="info-label">Í≤∞Ï†ú ID:</span>
                        <span class="info-value">${orderData.paymentId}</span>
                      </div>
                      `
                              : ""
                      }
                      ${
                          orderData.trackingNumber
                              ? `
                      <div class="info-item">
                        <span class="info-label">ÏÜ°Ïû•Î≤àÌò∏:</span>
                        <span class="info-value">${orderData.trackingNumber}</span>
                      </div>
                      `
                              : ""
                      }
                    </div>
                  </div>

                  <!-- Í≥†Í∞ù Ï†ïÎ≥¥ -->
                  <div class="section">
                    <div class="section-title">üë§ Í≥†Í∞ù Ï†ïÎ≥¥</div>
                    <div class="info-grid">
                      <div class="info-item">
                        <span class="info-label">Í≥†Í∞ù ID:</span>
                        <span class="info-value">${orderData.userId}</span>
                      </div>
                      <div class="info-item">
                        <span class="info-label">Ïù¥Î¶Ñ:</span>
                        <span class="info-value highlight">${orderData.userNm}</span>
                      </div>
                      <div class="info-item">
                        <span class="info-label">Ïó∞ÎùΩÏ≤ò:</span>
                        <span class="info-value">
                          <a href="tel:${orderData.phoneNumber}" style="color: #2563eb; text-decoration: none;">
                            ${orderData.phoneNumber}
                          </a>
                        </span>
                      </div>
                    </div>
                  </div>

                  <!-- Î∞∞ÏÜ° Ï†ïÎ≥¥ -->
                  <div class="section">
                    <div class="section-title">üöö Î∞∞ÏÜ° Ï†ïÎ≥¥</div>
                    <div class="info-item">
                      <span class="info-label">Î∞∞ÏÜ°ÏßÄ:</span>
                      <span class="info-value">${fullAddress}</span>
                    </div>
                    ${
                        orderData.deliveryMemo
                            ? `
                    <div class="info-item" style="margin-top: 12px;">
                      <span class="info-label">Î∞∞ÏÜ°Î©îÎ™®:</span>
                      <span class="info-value" style="font-style: italic; color: #6b7280; background-color: #f9fafb; padding: 8px 12px; border-radius: 6px; margin-left: 0;">
                        "${orderData.deliveryMemo}"
                      </span>
                    </div>
                    `
                            : ""
                    }
                  </div>

                  <!-- Ï£ºÎ¨∏ ÏÉÅÌíà -->
                  <div class="section">
                    <div class="section-title">üõçÔ∏è Ï£ºÎ¨∏ ÏÉÅÌíà (Ï¥ù ${orderData.items.length}Í∞ú)</div>
                    <div class="table-container">
                      <table class="order-table">
                        <thead>
                          <tr>
                            <th>ÏÉÅÌíà Ï†ïÎ≥¥</th>
                            <th>ÏàòÎüâ</th>
                            <th>Îã®Í∞Ä</th>
                            <th>ÏÜåÍ≥Ñ</th>
                          </tr>
                        </thead>
                        <tbody>
                          ${itemsHtml}
                        </tbody>
                      </table>
                    </div>
                  </div>

                  <!-- Ï¥ù Ï£ºÎ¨∏Í∏àÏï° -->
                  <div class="total-section">
                    <div class="total-label">Ï¥ù Ï£ºÎ¨∏Í∏àÏï°</div>
                    <div class="total-amount">${orderData.totalPrice.toLocaleString()}Ïõê</div>
                  </div>

                  <!-- Ï≤òÎ¶¨ ÏïàÎÇ¥ -->
                  <div class="action-section">
                    <div class="section-title" style="justify-content: center; color: #1e40af;">‚ö° Ï≤òÎ¶¨ ÏïàÎÇ¥</div>
                    <p style="margin: 12px 0; color: #374151; font-size: 16px; line-height: 1.6;">
                      ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏Ïù¥ Ï†ëÏàòÎêòÏóàÏäµÎãàÎã§.<br>
                      <strong style="color: #dc2626;">Í¥ÄÎ¶¨Ïûê ÌéòÏù¥ÏßÄÏóêÏÑú Ï¶âÏãú ÌôïÏù∏ÌïòÍ≥† Ï≤òÎ¶¨Ìï¥Ï£ºÏÑ∏Ïöî.</strong>
                    </p>
                    <a href="https://lafarfalla.kr/admin/list/orders" 
                      class="action-button">üìã Ï£ºÎ¨∏ ÏÉÅÏÑ∏Î≥¥Í∏∞</a>
                  </div>
                </div>

                <div class="footer">
                  <p><strong>ÎùºÌååÌåîÎùº</strong> | ÏûêÎèô Î∞úÏÜ° ÏïåÎ¶º</p>
                  <p style="margin-top: 8px; font-size: 12px;">
                    Î¨∏ÏùòÏÇ¨Ìï≠: cofsl0411@naver.com
                  </p>
                </div>
              </div>
            </body>
          </html>
        `;
  }

  public async sendEmailAuthNotification(
    email: string,
    authNumber: number,
  ): Promise<EmailResult> {
    try {
        const mailOptions = {
            from: `"ÎùºÌååÌåîÎùº" <${process.env.SMTP_USER}>`,
            to: email,
            subject: `Ïù¥Î©îÏùº Ïù∏Ï¶ùÎ≤àÌò∏`,
            html: this.generateAuthEmailHTML(authNumber),
        };

        const info = await this.transporter.sendMail(mailOptions);

        return {
            success: true,
            messageId: info.messageId,
        };
    } catch (error) {
        const errorMessage =
            error instanceof Error ? error.message : "Unknown error";
        console.error("Ïù¥Î©îÏùº Î∞úÏÜ° Ïã§Ìå®:", errorMessage);

        return {
            success: false,
            error: errorMessage,
        };
    }
  }

  private generateAuthEmailHTML(authNumber: number): string {
    return `
          <!DOCTYPE html>
            <html lang="ko">
              <head>
                <meta charset="UTF-8" />
                <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                <title>Ïù¥Î©îÏùº Ïù∏Ï¶ùÎ≤àÌò∏</title>
                <style>
                  body {
                    background-color: #f9fafb;
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Noto Sans KR', sans-serif;
                    color: #111827;
                    margin: 0;
                    padding: 0;
                  }
                  .container {
                    max-width: 480px;
                    margin: 40px auto;
                    background-color: #ffffff;
                    border-radius: 12px;
                    padding: 32px;
                    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
                    text-align: center;
                  }
                  .title {
                    font-size: 20px;
                    font-weight: 700;
                    margin-bottom: 12px;
                    color: #1f2937;
                  }
                  .subtitle {
                    font-size: 14px;
                    color: #6b7280;
                    margin-bottom: 24px;
                  }
                  .code {
                    font-size: 32px;
                    font-weight: 800;
                    letter-spacing: 6px;
                    padding: 16px 24px;
                    background-color: #f3f4f6;
                    color: #2563eb;
                    border-radius: 8px;
                    display: inline-block;
                    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.04);
                  }
                  .footer {
                    font-size: 12px;
                    color: #9ca3af;
                    margin-top: 40px;
                  }
                </style>
              </head>
              <body>
                <div class="container">
                  <div class="title">Ïù¥Î©îÏùº Ïù∏Ï¶ùÎ≤àÌò∏</div>
                  <div class="subtitle">ÏïÑÎûòÏùò Ïù∏Ï¶ùÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî</div>
                  <div class="code">${authNumber}</div>
                  <div class="footer">
                    ¬© 2025 ÎùºÌååÌåîÎùº<br />
                    Î¨∏Ïùò: cofsl0411@naver.com
                  </div>
                </div>
              </body>
            </html>
        `;
  }

  // ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏ Ïù¥Î©îÏùº Ï†ÑÏÜ°
  public async sendTempPasswordEmail(toEmail: string, tempPassword: string): Promise<EmailResult> {
      const mailOptions = {
          from: process.env.EMAIL_FROM || process.env.EMAIL_USER, // Î∞úÏã†Ïûê Ïù¥Î©îÏùº
          to: toEmail,
          subject: "[ÎùºÌååÌåîÎùº] ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏ Î∞úÍ∏â ÏïàÎÇ¥",
          html: `
              <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; border: 1px solid #ddd; padding: 20px; border-radius: 8px;">
                  <h2 style="color: #000; text-align: center; border-bottom: 1px solid #eee; padding-bottom: 10px;">ÎπÑÎ∞ÄÎ≤àÌò∏ Ï∞æÍ∏∞ ÏïàÎÇ¥</h2>
                  <p>ÏïàÎÖïÌïòÏÑ∏Ïöî, Í≥†Í∞ùÎãò.</p>
                  <p>ÏöîÏ≤≠ÌïòÏã† ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä Î∞úÍ∏âÎêòÏóàÏäµÎãàÎã§.</p>
                  <p style="font-size: 1.2em; font-weight: bold; background-color: #f8f8f8; padding: 15px; border-radius: 5px; text-align: center; border: 1px dashed #ccc;">
                      ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏: <span style="color: #d9534f;">${tempPassword}</span>
                  </p>
                  <p>Î°úÍ∑∏Ïù∏ ÌõÑ, Î≥¥ÏïàÏùÑ ÏúÑÌï¥ Ï¶âÏãú ÎπÑÎ∞ÄÎ≤àÌò∏Î•º Î≥ÄÍ≤ΩÌï¥ Ï£ºÏÑ∏Ïöî. Ïù¥ ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏Îäî ÌÉÄÏù∏ÏóêÍ≤å ÎÖ∏Ï∂úÎêòÏßÄ ÏïäÎèÑÎ°ù Ï£ºÏùò Î∞îÎûçÎãàÎã§.</p>
                  <p>Í∞êÏÇ¨Ìï©ÎãàÎã§.</p>
                  <div style="text-align: center; margin-top: 20px; font-size: 0.8em; color: #777;">
                      <p>Î≥∏ Î©îÏùºÏùÄ Î∞úÏã† Ï†ÑÏö©ÏûÖÎãàÎã§. Î¨∏ÏùòÎäî Ï±ÑÎÑêÌÜ°ÏùÑ Ïù¥Ïö©Ìï¥ Ï£ºÏÑ∏Ïöî.</p>
                  </div>
              </div>
          `,
      };

      try {
          const info = await this.transporter.sendMail(mailOptions);
          // console.log("ÏûÑÏãú ÎπÑÎ∞ÄÎ≤àÌò∏ Ïù¥Î©îÏùº Ï†ÑÏÜ° ÏÑ±Í≥µ:", info.messageId);
          return { success: true, messageId: info.messageId };
      } catch (error) {
          console.error("Ïù¥Î©îÏùº Ï†ÑÏÜ° Ïã§Ìå®:", error);
          if (error instanceof Error) {
              return { success: false, error: error.message };
          }
          return { success: false, error: "Unknown email sending error" };
      }
  }
}
